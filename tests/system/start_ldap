AZ_LDAP_IMG=osixia/openldap
AZ_LDAP_CTR=ldap-service
AZ_LDAP_DOMAIN=company.cz

AZ_LDIF_HOME=../../service/ldif

DOCKER="sudo docker"
DOCKER_EXEC="${DOCKER} exec -i $AZ_LDAP_CTR"

function stop_ldap
{
    ${DOCKER} rm -f $AZ_LDAP_CTR
}

function start_ldap
{
    local LDAP_ORGANISATION=Company
    local LDAP_DN="dc=company,dc=cz"
    local LDAP_ADMIN="cn=admin,${LDAP_DN}"
    local LDAP_ADMIN_PASSWORD="JonSn0w"
    local LDAP_ADMIN_CMD_AUTH="-x -D $LDAP_ADMIN -w $LDAP_ADMIN_PASSWORD"

    ${DOCKER} run -e LDAP_ORGANISATION="$LDAP_ORGANISATION" -e LDAP_DOMAIN=$AZ_LDAP_DOMAIN -e LDAP_ADMIN_PASSWORD=$LDAP_ADMIN_PASSWORD --hostname $AZ_LDAP_CTR -d --name $AZ_LDAP_CTR $AZ_LDAP_IMG

    sleep 5

    cat test.conf | ${DOCKER_EXEC} tee /home/test.conf
    cat industrialVisionUser.schema | ${DOCKER_EXEC} tee /etc/ldap/schema/industrialVisionUser.schema
    ${DOCKER_EXEC} mkdir /var/tmp/ldap.conf
    ${DOCKER_EXEC} slaptest -f /home/test.conf -F /var/tmp/ldap.conf/
    ${DOCKER_EXEC} cat /var/tmp/ldap.conf/cn\=config/cn\=schema/cn\=\{4\}industrialvisionuser.ldif
    # http://www.zytrax.com/books/ldap/ch6/slapd-config.html#use-schemas
    # - remove curly braces
    # - add the suffix ",cn=schema,cn=config" to dn:
    # - add cn: below objectClass
    # - remove everything after olcObjectClasses

    echo
    echo ":::: Extending Schema with the class industrialVisionUser"
    cat ${AZ_LDIF_HOME}/20-employee.ldif | ${DOCKER_EXEC} ldapadd -Y EXTERNAL -H ldapi:///
    echo "---- DONE"

    echo
    echo ":::: Adding the Org. Unit IVisionUsers"
    cat ${AZ_LDIF_HOME}/50-ou.ldif | sed 's/{{ LDAP_BASE_DN }}/'${LDAP_DN}'/g' | tee /tmp/ou.ldif | ${DOCKER_EXEC} ldapadd $LDAP_ADMIN_CMD_AUTH
    cat /tmp/ou.ldif
    rm /tmp/ou.ldif
    echo "---- DONE"

    echo
    echo ":::: Adding Jakub Filak"
    ${DOCKER_EXEC} ldapadd $LDAP_ADMIN_CMD_AUTH <<_EOF
dn: cn=jfilak,ou=IVisionUsers,dc=company,dc=cz
cn: jfilak
objectClass: simpleSecurityObject
objectClass: ClassIndustrialVision
givenName: Jakub
sn: Filak
IVisionRole: super
IVisionPIN: 1969
userPassword: 
_EOF
    echo "---- DONE"

    echo ":::: Adding Evil Twin - PIN 6666"
    ${DOCKER_EXEC} ldapadd $LDAP_ADMIN_CMD_AUTH <<_EOF
dn: cn=evil,ou=IVisionUsers,dc=company,dc=cz
cn: evil
objectClass: simpleSecurityObject
objectClass: ClassIndustrialVision
givenName: Evil
sn: Twin
IVisionRole: viewer
IVisionPIN: 6666
userPassword: 
_EOF
    echo "---- DONE"

    echo ":::: Adding Gabriel Angel - PIN 6666 (intentional duplicate)"
    ${DOCKER_EXEC} ldapadd $LDAP_ADMIN_CMD_AUTH <<_EOF
dn: cn=gabo,ou=IVisionUsers,dc=company,dc=cz
cn: gabo
objectClass: simpleSecurityObject
objectClass: ClassIndustrialVision
givenName: Gabriel
sn: Angel
IVisionRole: super
IVisionPIN: 6666
userPassword: 
_EOF
    echo "---- DONE"

    echo ":::: Setting password for Jakub Filak"
    ${DOCKER_EXEC} ldappasswd $LDAP_ADMIN_CMD_AUTH -s Karel "cn=jfilak,ou=IVisionUsers,dc=company,dc=cz"
    echo "---- DONE"

    echo ":::: Retrieve Jakub Filak data by DN"
    ldapsearch -H ldap://172.17.0.2 -b "cn=jfilak,ou=IVisionUsers,dc=company,dc=cz" $LDAP_ADMIN_CMD_AUTH
    echo "---- DONE"

    echo ":::: Find user login by Authentication PIN"
    ldapsearch -H ldap://172.17.0.2 -b "ou=IVisionUsers,dc=company,dc=cz" $LDAP_ADMIN_CMD_AUTH "(IVisionPIN=1969)" cn
    echo "---- DONE"

    echo ":::: Find user login by Authentication PIN - duplicates"
    ldapsearch -H ldap://172.17.0.2 -b "ou=IVisionUsers,dc=company,dc=cz" $LDAP_ADMIN_CMD_AUTH "(IVisionPIN=6666)" cn
    echo "---- DONE"

    return
}

start_ldap

AZ_LDAP_HOSTNAME=$(${DOCKER} inspect ${AZ_LDAP_CTR} --format "{{ .NetworkSettings.IPAddress }}")
export AZ_LDAP_HOSTNAME
echo ">>> LDAP host: ${AZ_LDAP_HOSTNAME}"
